version: '3'
services:

  mysql:
    image: mysql:5.7
    container_name: fangxianyu-mysql
    environment:
      MYSQL_ROOT_PASSWORD: 1234
    ports:
    - "3306:3306"
    volumes:
    - ./dev/mysql/conf:/etc/mysql/conf.d
    - ./dev/mysql/data:/var/lib/mysql
    #/dev/mysql/data为空(首次启动)时会执行/docker-entrypoint-initdb.d下的sql
#    - ./dev/mysql/dump/1_schema.sql:/docker-entrypoint-initdb.d/1_schema.sql  #只导入schema
    - ./dev/mysql/dump:/docker-entrypoint-initdb.d  #schema+所有测试数据
    restart: always

  rabbitmq:
    image: rabbitmq:3.7.8-management
    container_name: fangxianyu-rabbitmq
    ports:
    - "5672:5672"
    - "15672:15672" #管理界面 ： 账号密码都是guest
    hostname: my-rabbit-mq
    restart: always

  redis:
    image: redis:3.2
    container_name: fangxianyu-redis
    volumes:
    - ./dev/redis/data:/data
    ports:
    - "6379:6379"

  eureka:
    build: ./eureka
    container_name: fangxianyu-eureka
    restart: always
  user-service:
    build: ./user-service
    container_name: fangxianyu-user-service
    restart: always
    depends_on:
    - mysql
    - rabbitmq
    - eureka
  auth-service:
    build: ./auth-service
    container_name: fangxianyu-auth-service
    restart: always
    depends_on:
    - mysql
    - rabbitmq
    - eureka
    - user-service
  goods-service:
    build: ./goods-service
    container_name: fangxianyu-goods-service
    restart: always
    depends_on:
    - mysql
    - eureka
    - user-service
  im-service:
    build: ./im-service
    container_name: fangxianyu-im-service
    restart: always
    depends_on:
    - mysql
    - redis
    - eureka
    - user-service
    - goods-service
  gateway:
    build: ./gateway
    container_name: fangxianyu-gateway
    ports:
    - "8080:8080"
    restart: always
    depends_on:
    - eureka
    - user-service
    - auth-service
    - goods-service
    - im-service
